---
title: "Class09: Candy Analysis Mini Project"
author: "Kalisa Kang (PID: A16741690)"
format: pdf
---

In today's class, we will examine some data about candy from the 538 website. 

## Import Data

```{r}
candy_file <- "candy-data.txt"
candy = read.csv(candy_file, row.names=1)
head(candy)
```

## Data exploration

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

There are `r nrow(candy)` candy types in this dataset. 

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

There are `r sum(candy$fruity)` fruity candy types in this dataset.

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Nerds", ]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

```{r}
# Short cut syntax that tells R to go into package and execute the function
skimr::skim(candy)
```

The winpercent variable is on a different scale than the other variables.

>Q7. What do you think a zero and one represent for the candy$chocolate column?

Zero represents that chocolate is not present, while 1 represents that chocolate is present in the candy.

> Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy) +
  aes(winpercent) + 
  geom_histogram(bins=7)
```

>Q9. Is the distribution of winpercent values symmetrical?

No, the distribution is not symmetrical.

>Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```

The center is below 50%.

>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

- First find all chocolate candy
- Then find their winpercent values
- Find the mean winpercent
- Then do the same for fruity candy and compare w/ the mean for chocolate candy

```{r}
choc_winpercent <- candy$winpercent[as.logical(candy$chocolate)]
fruity_winpercent <- candy$winpercent[as.logical(candy$fruity)]
mean(choc_winpercent) > mean(fruity_winpercent)
```

```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)

fruity.inds <- candy$fruity == 1
fruity.win <- candy[fruity.inds,]$winpercent
mean(fruity.win)

mean(chocolate.win) > mean(fruity.win)
```

On average, chocolate candy is higher ranked than fruit candy (ie higher winpercent).

>Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win, fruity.win)
```

The difference is statistically significant because the p-value of 2.871e-8 is less than .05.

> Q13. What are the five least liked candy types in this set?

```{r}
x <- c(5,6,4)
sort(x)
```

```{r}
order(x)
x[order(x)]
```

The order function returns the indices that make the input sorted.

```{r}
inds <- order(candy$winpercent)
head(candy[inds,], 5)
```


```{r}
library(dplyr)
candy %>% 
  arrange(winpercent) %>% 
  head(5)
```
The 5 least likely candy types in this set are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubbles, and Jawbusters.

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
candy %>% 
  arrange(winpercent) %>% 
  tail(5)
```
The top 5 favorite candies are Snickers, Kit Kat, Twix, Reese's Miniatures, and Reese's peanut butter cup.

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(x=winpercent, y=rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
#| fig-height: 10
#| fig-width: 7
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

```{r}
ggsave("mybarplot.png", height=10)
```

![Exported image that is a bit bigger so I can read the labels](mybarplot.png)
Adding my custom colors to my bar plot

```{r}
my_cols=rep("grey", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
#| fig-height: 10
#| fig-width: 7
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
# `reorder(rownames(candy)), winpercent` reorders the candy row names by winpercent
  geom_col(fill=my_cols) 
```

> Q17. What is the worst ranked chocolate candy?
 
The worst ranked chocolate Sixlets.
 
> Q18. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst.

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "red"
```

We can use `ggrepel` package to do a better job of placing labels next to the data points. 

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(x=winpercent, y=pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=2.7, max.overlaps = 8)
```
Reese's minatures give the most bang for your buck!

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

## 5 Exploring the correlation structure

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and chocolate, and bar and pluribus are anti-correlated.

There's some redundancy in this correlation plot and PCA is better.

> Q23. Similarly, what two variables are most positively correlated?

Bar and chocolate, chocolate and winpercent are the most positively correlated.

## 6 Principal Component Analysis

We will perform a PCA of the candy. Key question: do we need to scale the data before PCA?

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
head(my_data)
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
#library(plotly)
#ggplotly(p)
```
How do the original variables contribute to our PCs? For this, we look at the loadings component of our results object i.e. the   `pca$rotation` object.l

```{r}
head(pca$rotation)
```


```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

Make a bar plot with ggplot and order the bars by their value.

```{r}
res <- pca$rotation

ggplot(res) +
  aes(PC1, reorder(row.names(res), PC1)) +
  geom_col()
```


> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The fruity, hard, and pluribus variables are picked up strongly by PC1 in the positive direction. This makes sense to me because based on the correlation structure in the dataset, if it is a fruity candy, then it will tend to be hard and come in a packet with multiple candies.





